swagger: "2.0"
info:
  title: mini-chat API
  description: IM.
  version: 1.0.0
  contact:
    email: 1027837952@qq.com
  license: {}
basePath: /v1
paths:
  /channel/create:
    post:
      tags:
      - channel
      description: CreateDirectChannel
      operationId: ChannelController.CreateDirectChannel
      parameters:
      - in: body
        name: userIds
        description: userIds
        required: true
        type: array
        items:
          type: string
      responses:
        "200":
          description: the details of Channel
          schema:
            $ref: '#/definitions/models.Channel'
        "400":
          description: no enough input
        "500":
          description: get products common error
  /file/upload:
    post:
      tags:
      - file
      description: upload file
      operationId: FileController.upload
      parameters:
      - in: string
        name: formData
        description: the path of upload file
      responses:
        "200":
          description: upload success
        "400":
          description: no enough input
        "500":
          description: get products common error
  /post/channel/{channel_id([A-Za-z0-9]+)}/posts:
    get:
      tags:
      - post
      description: get post
      operationId: PostController.get post
      parameters:
      - in: body
        name: channel_id
        description: channel_id
        required: true
        type: string
      responses:
        "200":
          description: the details of post
          schema:
            type: array
            items:
              $ref: '#/definitions/models.Post'
        "400":
          description: no enough input
        "500":
          description: get products common error
  /post/create:
    post:
      tags:
      - post
      description: create post
      operationId: PostController.create post
      parameters:
      - in: body
        name: channel_id
        description: message
        required: true
        type: string
      - in: body
        name: message
        description: 密码
        required: true
        type: string
      responses:
        "200":
          description: the details of post
          schema:
            $ref: '#/definitions/models.Post'
        "400":
          description: no enough input
        "500":
          description: get products common error
  /user/create:
    post:
      tags:
      - user
      description: create user by email
      operationId: UserController.create user
      parameters:
      - in: body
        name: username
        description: username
        required: true
        type: string
      - in: body
        name: password
        description: password
        required: true
        type: string
      - in: body
        name: email
        description: email
        required: true
        type: string
      responses:
        "200":
          description: the details of User
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: no enough input
        "500":
          description: get products common error
  /user/login:
    post:
      tags:
      - user
      description: login by username and password
      operationId: UserController.login
      parameters:
      - in: body
        name: username
        description: 用户名
        required: true
        type: string
      - in: body
        name: password
        description: 密码
        required: true
        type: string
      responses:
        "200":
          description: the details of User
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: no enough input
        "500":
          description: get products common error
  /user/logout:
    post:
      tags:
      - user
      description: logout
      operationId: UserController.logout
      responses:
        "200":
          description: success
        "400":
          description: no enough input
        "500":
          description: get products common error
definitions:
  models.Channel:
    title: Channel
    type: object
    properties:
      CreateAt:
        type: integer
        format: int64
      CreatorId:
        type: string
      DeleteAt:
        type: integer
        format: int64
      DisplayName:
        type: string
      Header:
        type: string
      LastPostAt:
        type: integer
        format: int64
      Name:
        type: string
      Purpose:
        type: string
      TotalMsgCount:
        type: integer
        format: int64
      Type:
        type: string
      UpdateAt:
        type: integer
        format: int64
      id:
        type: string
  models.Post:
    title: Post
    type: object
    properties:
      channel_id:
        type: string
      create_at:
        type: integer
        format: int64
      delete_at:
        type: integer
        format: int64
      id:
        type: string
      last_picture_update:
        type: integer
        format: int64
      message:
        type: string
      type:
        type: string
      update_at:
        type: integer
        format: int64
      user_id:
        type: string
  models.User:
    title: User
    type: object
    properties:
      Age:
        type: integer
        format: int64
      AuthData:
        type: string
      AuthService:
        type: string
      CreateAt:
        type: integer
        format: int64
      DeleteAt:
        type: integer
        format: int64
      Email:
        type: string
      EmailVerified:
        type: boolean
      FailedAttempts:
        type: integer
        format: int64
      Id:
        type: string
      LastPasswordUpdate:
        type: integer
        format: int64
      LastPictureUpdate:
        type: integer
        format: int64
      Nickname:
        type: string
      Password:
        type: string
      PhoneNum:
        type: string
      Position:
        type: string
      Roles:
        type: string
      UpdateAt:
        type: integer
        format: int64
      Username:
        type: string
tags:
- name: user
  description: |
    USER API
